version: "3"

services:
  tracer_db:
    build:
      context: ./tracer-api/clickhouse
      dockerfile: Dockerfile
    container_name: tracer_db
    hostname: tracer_db
    image: neonlabsorg/clickhouse:ci-tracing-api-develop
    expose:
      - "8123"
      - "9000"
      - "9009"
    volumes:
      - ./tracer-api-data:/var/lib/clickhouse
      - ./tracer-api-logs:/var/log/clickhouse-server
    healthcheck:
      test: ["CMD-SHELL", "clickhouse-client -q 'SELECT 1'"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s
    networks:
      - net
    
  validator:
    container_name: validator
    image: neonlabsorg/solana:ci-tracing-api-develop
    build:
      context: ./solana
      dockerfile: Dockerfile
    environment:
      NEON_REVISION: ci-tracing-api-develop-1.8.12
      SOLANA_URL: http://validator:8899
      RUST_LOG: solana_runtime::system_instruction_processor=debug,solana_runtime::message_processor=debug,solana_bpf_loader=debug,solana_rbpf=debug
      SOLANA_RUN_SH_VALIDATOR_ARGS: >
        --enable-account-dumper
        --dumper-db-url http://tracer_db:8123
        --dumper-db-database tracer_api_db
        --dumper-db-user validator_user
        --dumper-db-password qwerty
        --dumper-program-ids 53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io
    hostname: validator
    ports:
      - 0.0.0.0:8899:8899
    expose:
      - "8899"
      - "9900"
      - "8900"
      - "8001"
      - "8001-8009/udp"
    networks:
      - net
    depends_on:
      tracer_db:
        condition: service_healthy
    healthcheck:
      # Must be available from outside (calling without -u causes premature result)
      test: [ CMD-SHELL, "solana cluster-version -u http://validator:8899" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s

  deploy-evm:
    container_name: deploy-evm
    image: neonlabsorg/evm_loader:ci-tracing-api-develop-1.8.12
    environment:
      - SOLANA_URL=http://validator:8899
    networks:
      - net
    depends_on:
      validator:
        condition: service_healthy
    command: bash -c "create-test-accounts.sh 1 && deploy-evm.sh"

  postgres:
    container_name: postgres
    image: postgres:14.0
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
    hostname: postgres
    ports:
      - 127.0.0.1:5432:5432
    expose:
      - "5432"
    networks:
      - net
    healthcheck:
      test: [ CMD-SHELL, "pg_isready -h postgres -p 5432" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 5s
      
  dbcreation:
    container_name: dbcreation
    image: neonlabsorg/proxy:latest
    environment:
      SOLANA_URL: http://validator:8899
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      POSTGRES_HOST: postgres
    entrypoint: proxy/run-dbcreation.sh
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy
      evm_loader:
        condition: service_completed_successfully
        
  indexer:
    container_name: indexer
    image: neonlabsorg/proxy:latest
    environment:
      SOLANA_URL: http://validator:8899
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      CONFIG: ci
    hostname: indexer
    depends_on:
      postgres:
        condition: service_healthy
      evm_loader:
        condition: service_completed_successfully
      dbcreation:
        condition: service_completed_successfully
    networks:
      - net
    entrypoint: proxy/run-indexer.sh
  
  proxy:
    container_name: proxy
    image: neonlabsorg/proxy:latest
    environment:
      SOLANA_URL: http://validator:8899
      FAUCET_URL: http://faucet:3333
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      LOG_SENDING_SOLANA_TRANSACTION: "YES"
      LOG_NEON_CLI_DEBUG: "YES"
      FUZZING_BLOCKHASH: "YES"
      CONFIG: ci
      PP_SOLANA_URL: ${CI_PP_SOLANA_URL:-https://api.devnet.solana.com}
      PYTH_MAPPING_ACCOUNT: ${CI_PYTH_MAPPING_ACCOUNT:-BmA9Z6FjioHJPpjT39QazZyhDRUdZy2ezwx4GiDdE2u2}
      MIN_OPERATOR_BALANCE_TO_WARN: 4565760000 # = 913152000 * 5 (5 storage accounts) = 4.56576 SOL
      MIN_OPERATOR_BALANCE_TO_ERR: 913152000 # = solana rent 131072 (= Rent-exempt minimum: 0.913152 SOL) SOLs to create a storage
      MINIMAL_GAS_PRICE: 1
      OPERATOR_GAS_ACCOUNTS: 0x8966Ef2ae7A109Fd0977F5151b4607dc42929fBD;0x619d670152103a972B67a45b9Be764FF11979E4E
    hostname: proxy
    depends_on:
      dbcreation:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      deploy-evm:
        condition: service_completed_successfully
      indexer:
        condition: service_started
    ports:
      - 127.0.0.1:9090:9090
    expose:
      - "9090"
    networks:
      - net
    entrypoint: proxy/run-test-proxy.sh
    
  neon-tracer:
    container_name: neon-tracer
    hostname: neon-tracer
    build:
      context: tracer-api/
      dockerfile: Dockerfile
      args:
        NEON_REVISION: ci-tracing-api-develop-1.8.12
    environment:
      RUST_BACKTRACE: 1
      RUST_LOG: debug
    image: neonlabsorg/neon-tracer:latest
    depends_on:
      tracer_db:
        condition: service_healthy
      proxy:
        condition: service_started
    expose:
      - "8250"
    ports:
      - "127.0.0.1:8250:8250"
    command: >
      neon-tracer 
      -l 0.0.0.0:8250
      -c http://tracer_db:8123
      -d tracer_api_db
      -u validator_user
      -p qwerty
      --evm-loader 53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io
    networks:
      - net
      
  faucet:
    container_name: faucet
    image: neonlabsorg/proxy:latest
    environment:
      FAUCET_RPC_PORT: 3333
      FAUCET_RPC_ALLOWED_ORIGINS: '["http://neon-tracer-test"]'
      FAUCET_WEB3_ENABLE: 'false'
      WEB3_RPC_URL: 'http://proxy:9090/solana'
      WEB3_PRIVATE_KEY: ''
      NEON_ERC20_TOKENS:
      NEON_ERC20_MAX_AMOUNT: 1000
      FAUCET_SOLANA_ENABLE: 'true'
      SOLANA_URL: 'http://validator:8899'
      NEON_OPERATOR_KEYFILE: '/root/.config/solana/id.json'
      NEON_ETH_MAX_AMOUNT: 1000
      TEST_FAUCET_INIT_NEON_BALANCE: 100000
    hostname: faucet
    expose:
      - "3333"
    networks:
      - net
    entrypoint: ./run-test-faucet.sh
  
  neon-tracer-test:
    container_name: neon-tracer-test
    hostname: neon-tracer-test
    build:
      context: tracing-api-tests/
      dockerfile: Dockerfile
    image: neonlabsorg/neon-tracer-test:latest
    networks:
      - net
    volumes:
      - ./tracing-api-tests/entrypoint.sh:/opt/entrypoint.sh

networks:
  net:

