version: "3"

services:
  tracer_db:
    build:
      context: ./tracer-api/clickhouse
      dockerfile: Dockerfile
    container_name: tracer_db
    hostname: tracer_db
    image: neonlabsorg/clickhouse:ci-tracing-api-v0.5.1
    expose:
      - "8123"
      - "9000"
      - "9009"
    volumes:
      - ./tracer-api-data:/var/lib/clickhouse
      - ./tracer-api-logs:/var/log/clickhouse-server
    healthcheck:
      test: ["CMD-SHELL", "clickhouse-client -q 'SELECT 1'"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s
    networks:
      - net
    
  validator:
    container_name: validator
    image: neonlabsorg/solana:ci-tracing-api-v0.5.1
    build:
      context: ./solana
      dockerfile: Dockerfile
    environment:
      NEON_REVISION: ${NEON_REVISION:-ci-tracing-api-v0.5.1}
      SOLANA_URL: http://validator:8899
      RUST_LOG: solana_runtime::system_instruction_processor=debug,solana_runtime::message_processor=debug,solana_bpf_loader=debug,solana_rbpf=debug
      SOLANA_RUN_SH_VALIDATOR_ARGS: >
        --enable-account-dumper
        --dumper-db-url http://tracer_db:8123
        --dumper-db-database tracer_api_db
        --dumper-db-user validator_user
        --dumper-db-password qwerty
        --dumper-program-ids 53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io
    hostname: validator
    ports:
      - 0.0.0.0:8899:8899
    expose:
      - "8899"
      - "9900"
      - "8900"
      - "8001"
      - "8001-8009/udp"
    networks:
      - net
    depends_on:
      tracer_db:
        condition: service_healthy
    healthcheck:
      # Must be available from outside (calling without -u causes premature result)
      test: [ CMD-SHELL, "solana cluster-version -u http://validator:8899" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s

  deploy-evm:
    container_name: deploy-evm
    image: neonlabsorg/evm_loader:ci-tracing-api-v0.5.1
    environment:
      - SOLANA_URL=http://validator:8899
    networks:
      - net
    depends_on:
      validator:
        condition: service_healthy
    command: bash -c "create-test-accounts.sh 1 && deploy-evm.sh"

  postgres:
    container_name: postgres
    image: postgres:14.0
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
    hostname: postgres
    ports:
      - 127.0.0.1:5432:5432
    expose:
      - "5432"
    networks:
      - net
    healthcheck:
      test: [ CMD-SHELL, "pg_isready -h postgres -p 5432" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 5s

  proxy:
    container_name: proxy
    image: neonlabsorg/proxy:ci-tracing-api-v0.5.1
    environment:
      SOLANA_URL: http://validator:8899
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      NEW_USER_AIRDROP_AMOUNT: 100
      LOG_SENDING_SOLANA_TRANSACTION: "YES"
      LOG_NEON_CLI_DEBUG: "YES"
      CONFIG: ci
    hostname: proxy
    depends_on:
      postgres:
        condition: service_healthy
      deploy-evm:
        condition: service_completed_successfully
    ports:
      - 127.0.0.1:9090:9090
    expose:
      - "9090"
    networks:
      - net
    entrypoint: proxy/run-test-proxy.sh
    
  neon-tracer:
    container_name: neon-tracer
    hostname: neon-tracer
    build:
      context: tracer-api/
      dockerfile: Dockerfile
      args:
        NEON_REVISION: ${NEON_REVISION:-ci-tracing-api-v0.5.1}
    environment:
      RUST_BACKTRACE: 1
      RUST_LOG: debug
    image: neonlabsorg/neon-tracer:latest
    depends_on:
      tracer_db:
        condition: service_healthy
      proxy:
        condition: service_started
    expose:
      - "8250"
    ports:
      - "127.0.0.1:8250:8250"
    command: >
      neon-tracer 
      -l 0.0.0.0:8250
      -c http://tracer_db:8123
      -d tracer_api_db
      -u validator_user
      -p qwerty
      --evm-loader 53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io
    networks:
      - net
  
  neon-tracer-test:
    container_name: neon-tracer-test
    hostname: neon-tracer-test
    build:
      context: tracing-api-tests/
      dockerfile: Dockerfile
    image: neonlabsorg/neon-tracer-test:latest
    networks:
      - net
    volumes:
      #- ./tracing-api-tests/resources:/opt/resources
      - ./tracing-api-tests/entrypoint.sh:/opt/entrypoint.sh

networks:
  net:

