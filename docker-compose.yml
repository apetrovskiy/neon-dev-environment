version: "3"

x-builder-common: &x-builder-common
    build:
      context: ./images
      dockerfile: Builder-Dockerfile
    image: evm_builder:latest
    environment:
      NEON_REVISION: ${NEON_REVISION:-latest}
    volumes:
      - ./neon-evm/evm_loader/:/opt/evm_loader/
    working_dir: /opt/evm_loader

services:
  solana:
    container_name: solana
    image: neonlabsorg/solana:${SOLANA_REVISION:-v1.8.12-testnet}
    environment:
      SOLANA_URL: http://solana:8899
      RUST_LOG: solana_runtime::system_instruction_processor=trace,solana_runtime::message_processor=debug,solana_bpf_loader=debug,solana_rbpf=debug
    hostname: solana
    ports:
      - 0.0.0.0:8899:8899
    expose:
      - "8899"
      - "9900"
      - "8900"
      - "8001"
      - "8001-8009/udp"
    networks:
      - net
    entrypoint:  bash -c "./run.sh | grep -v 'Program Vote111111111111111111111111111111111111111'"
    healthcheck:
      # Must be available from outside (calling without -u causes premature result)
      test: [ CMD-SHELL, "solana cluster-version -u http://solana:8899" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s
      
  builder:
    <<: *x-builder-common
    container_name: buider
    entrypoint: >
      bash -c "cd program && /opt/evm_loader/ci_checks.sh
      && cargo build --release --all
      && cargo build-bpf --features no-logs"
    
  cleaner:  
    <<: *x-builder-common
    container_name: cleaner
    entrypoint: cargo clean

  deploy-evm:
    container_name: evm_loader
    image: neonlabsorg/evm_loader:${EVM_LOADER_REVISION:-latest}
    environment:
      - SOLANA_URL=http://solana:8899
    networks:
      - net
    depends_on:
      solana:
        condition: service_healthy
    command: bash -c "create-test-accounts.sh 1 && deploy-evm.sh"
    volumes:
      - ./neon-evm/evm_loader/target/release/neon-cli:/opt/neon-cli
      - ./neon-evm/evm_loader/target/deploy/evm_loader.so:/opt/evm_loader.so

  postgres:
    container_name: postgres
    image: postgres:14.0
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
    hostname: postgres
    ports:
      - 127.0.0.1:5432:5432
    expose:
      - "5432"
    networks:
      - net
    healthcheck:
      test: [ CMD-SHELL, "pg_isready -h postgres -p 5432" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 5s
      
  indexer:
    container_name: indexer
    image: neonlabsorg/proxy:${PROXY_REVISION:-latest}
    environment:
      SOLANA_URL: http://solana:8899
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      CONFIG: ci
    hostname: indexer
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - net
    entrypoint: proxy/run-indexer.sh

  proxy:
    container_name: proxy
    image: neonlabsorg/proxy:${PROXY_REVISION:-latest}
    environment:
      SOLANA_URL: http://solana:8899
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      NEON_CLI_TIMEOUT: 2
      LOG_SENDING_SOLANA_TRANSACTION: "YES"
      LOG_NEON_CLI_DEBUG: "YES"
      FUZZING_BLOCKHASH: "YES"
      CONFIG: ci
      PP_SOLANA_URL: https://api.devnet.solana.com
      PYTH_MAPPING_ACCOUNT: BmA9Z6FjioHJPpjT39QazZyhDRUdZy2ezwx4GiDdE2u2
      MIN_OPERATOR_BALANCE_TO_WARN: 4565760000 # = 913152000 * 5 (5 storage accounts) = 4.56576 SOL
      MIN_OPERATOR_BALANCE_TO_ERR: 913152000 # = solana rent 131072 (= Rent-exempt minimum: 0.913152 SOL) SOLs to create a storage
    hostname: proxy
    depends_on:
      solana:
        condition: service_healthy
      postgres:
        condition: service_healthy
      indexer:
        condition: service_started
    ports:
      - 127.0.0.1:9090:9090
    expose:
      - "9090"
    networks:
      - net
    entrypoint: proxy/run-test-proxy.sh
    volumes:
      - ./neon-evm/evm_loader/target/release/neon-cli:/spl/bin/neon-cli
      - ./proxy-model.py:/opt
     
  faucet:
    container_name: faucet
    image: neonlabsorg/proxy:${PROXY_REVISION:-latest}
    environment:
      FAUCET_RPC_BIND: '0.0.0.0'
      FAUCET_RPC_PORT: 3333
      FAUCET_RPC_ALLOWED_ORIGINS: '["http://airdropper", "http://localhost"]'
      FAUCET_WEB3_ENABLE: 'false'
      WEB3_RPC_URL: 'http://proxy:9090/solana'
      WEB3_PRIVATE_KEY: ''
      NEON_ERC20_TOKENS:
      NEON_ERC20_MAX_AMOUNT: 1000
      FAUCET_SOLANA_ENABLE: 'true'
      SOLANA_URL: 'http://solana:8899'
      NEON_OPERATOR_KEYFILE: '/root/.config/solana/id.json'
      NEON_ETH_MAX_AMOUNT: 1000
      TEST_FAUCET_INIT_NEON_BALANCE: 1000000000
    hostname: faucet
    expose:
      - 3333
    ports:
      - 127.0.0.1:3333:3333
    expose:
      - "3333"
    networks:
      - net
    entrypoint: ./run-test-faucet.sh
    depends_on:
      proxy:
        condition: service_started
    volumes:
      - ./neon-evm/evm_loader/target/release/faucet:/spl/bin/faucet
      - ./proxy-model.py:/opt
  
  airdropper:
    container_name: airdropper
    image: neonlabsorg/proxy:${PROXY_REVISION:-latest}
    environment:
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      POSTGRES_HOST: postgres
      SOLANA_URL: http://solana:8899
      FAUCET_URL: http://faucet:3333
      NEON_CLI_TIMEOUT: 2
      INDEXER_ERC20_WRAPPER_WHITELIST: ANY
      LOG_LEVEL: INFO
      PRICE_UPDATE_INTERVAL: 10
      START_SLOT: LATEST
      PP_SOLANA_URL: https://api.mainnet-beta.solana.com
      PYTH_MAPPING_ACCOUNT: AHtgzX45WTKfkPG53L6WYhGEXwQkN1BVknET3sVsLL8J
      MAX_CONFIDENCE_INTERVAL: 0.01
    hostname: airdropper
    entrypoint: ./run-airdropper.sh
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy
      faucet:
        condition: service_started
    volumes:
      - ./neon-evm/evm_loader/target/release/neon-cli:/spl/bin/neon-cli
      - ./proxy-model.py:/opt

  proxy-test:
    container_name: proxy-test
    image: neonlabsorg/proxy:${PROXY_REVISION:-latest}
    environment:
      SOLANA_URL: http://solana:8899
      PROXY_URL: http://proxy:9090/solana
      EVM_LOADER: 53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io
      EXTRA_GAS: 100000
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      POSTGRES_HOST: postgres
      NEW_USER_AIRDROP_AMOUNT: 0 #3000
      TESTNAME: erc20_wrapper_contract
      #TESTNAME: neon_token
    hostname: proxy-test
    depends_on:
      - proxy
      - faucet
      - airdropper
    networks:
      - net
    entrypoint: proxy/deploy-test.sh
    volumes:
      - ./neon-evm/evm_loader/target/release/neon-cli:/spl/bin/neon-cli
      - ./proxy-model.py:/opt

networks:
  net:

