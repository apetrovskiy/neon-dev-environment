version: "3"

services:
  solana:
    container_name: solana
    image: neonlabsorg/solana:${SOLANA_REVISION:-v1.7.9-resources}
    environment:
      SOLANA_URL: http://solana:8899
      RUST_LOG: solana_runtime::system_instruction_processor=trace,solana_runtime::message_processor=debug,solana_bpf_loader=debug,solana_rbpf=debug
    hostname: solana
    ports:
      - 127.0.0.1:8899:8899
    expose:
      - "8899"
      - "9900"
      - "8900"
      - "8001"
      - "8001-8009/udp"
    networks:
      - net
    healthcheck:
      # Must be available from outside (calling without -u causes premature result)
      test: [ CMD-SHELL, "solana cluster-version -u http://solana:8899" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s

  evm_builder:
    container_name: evm_builder
    build:
      context: .
      dockerfile: Dockerfile
    image: evm-builder
    working_dir: /opt/neon-dev-env
    volumes:
      - .:/opt/neon-dev-env
    command: ./build-evm.sh
      
  evm_loader:
    container_name: evm_loader
    build:
      context: ./neon-evm/
      dockerfile: Dockerfile
    image: neonlabsorg/evm_loader:dev
    environment:
      - SOLANA_URL=http://solana:8899
    networks:
      - net
    depends_on:
      solana:
        condition: service_healthy
    command: bash -c "create-test-accounts.sh 1 && deploy-evm.sh"
    volumes:
      - ./neon-evm/evm_loader/target/release/neon-cli:/opt/neon-cli
      - ./neon-evm/evm_loader/target/deploy/evm_loader.so:/opt/evm_loader.so
      - ./neon-evm/evm_loader/evm_loader-keypair.json:/opt/evm_loader-keypair.json

  postgres:
    container_name: postgres
    image: postgres:14.0
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
    hostname: postgres
    healthcheck:
      test: [ CMD-SHELL, "pg_isready" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 5s
    expose:
      - "5432"
    networks:
      - net

  proxy:
    container_name: proxy
    build:
      context: ./proxy-model.py/
      dockerfile: Dockerfile
    image: neonlabsorg/proxy:dev
    environment:
      SOLANA_URL: http://solana:8899
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      NEW_USER_AIRDROP_AMOUNT: 100
      CONFIG: ci
    hostname: proxy
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 127.0.0.1:9090:9090
    expose:
      - "9090"
    networks:
      - net
    entrypoint: proxy/run-test-proxy.sh
    volumes:
      - ./proxy-model.py/:/opt/
      - ./neon-evm/evm_loader/target/release/neon-cli:/spl/bin/neon-cli
      
  proxy-test:
    container_name: proxy-test
    build:
      context: ./proxy-model.py/
      dockerfile: Dockerfile
    image: neonlabsorg/proxy:dev
    environment:
      PROXY_URL: http://proxy:9090/solana
      SOLANA_URL: http://solana:8899
      EXTRA_GAS: 100000
      EVM_LOADER: 53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io
    entrypoint: proxy/deploy-test.sh
    networks:
      - net
      
networks:
  net:

